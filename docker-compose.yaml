version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 5

#  mongo-product_service:
#    image: mongo:6-jammy
#    ports:
#      - "27017:27017"
#    expose:
#      - "27017"
#    volumes:
#      - ./mongo-data/product-service-data:/data/db


  mongo-inventory_service:
    image: mongo:6-jammy
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data/inventory-service-data:/data/db


  eureka-server:
    image: springcloud/eureka
    container_name: eureka-server
    ports:
      - "8761:8761"


  redis-cart_service:
    image: redis:7.2.3-alpine
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "6379" ]
      interval: 10s
      timeout: 5s
      retries: 5

  dapr-placement:
    image: "daprio/dapr:1.9.4"
    command:
      [
        "./placement",
        "-port",
        "50000",
        "-log-level",
        "debug"
      ]
    ports:
      - "50000:50000"

  zipkin:
    image: "openzipkin/zipkin"
    ports:
      - "9411:9411"

#  api-gateway:
#    build:
#      context: .
#      dockerfile: api-gateway/Dockerfile
#    ports:
#      - "8080:8080"
#    depends_on:
#      "broker":
#        condition: service_healthy
#      "redis-cart_service":
#        condition: service_healthy

  inventory_service:
    build:
      context: .
      dockerfile: inventory_service/Dockerfile
    environment:
      # - SERVER_PORT=8082
      - MONGODB_URI=mongodb:mongodb://mongo-inventory_service:27017
      - MONGODB_STATUS_HOST=mongo-inventory_service
      - MONGODB_STATUS_PORT=27017
    ports:
      - "8082:8082"
    depends_on:
      "broker":
        condition: service_healthy
      # "redis-cart_service":
      #   condition: service_healthy

  inventory-api-dapr:
    image: "daprio/daprd:1.9.4"
    network_mode: "service:inventory_service"
    command:
      [
        "./daprd",
        "-app-id",
        "inventory-service",
        "-app-port",
        "8082",
        "-log-level",
        "debug",
        "-placement-host-address",
        "dapr-placement:50000",
        "-components-path",
        "./dapr/components",
        "-config",
        "./dapr/config.yaml"
      ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      "broker":
        condition: service_healthy

  cart_service:
    build:
      context: .
      dockerfile: cart_service/Dockerfile
    ports:
      - "8089:8089"
    depends_on:
      "broker":
        condition: service_healthy
      "redis-cart_service":
        condition: service_healthy

  cart-api-dapr:
    image: "daprio/daprd:1.9.4"
    network_mode: "service:cart_service"
    command:
      [
        "./daprd",
        "-app-id",
        "cart_service",
        "-app-port",
        "8089",
        "-log-level",
        "debug",
        "-placement-host-address",
        "dapr-placement:50000",
        "-components-path",
        "./dapr/components",
        "-config",
        "./dapr/config.yaml"
      ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      "broker":
        condition: service_healthy

